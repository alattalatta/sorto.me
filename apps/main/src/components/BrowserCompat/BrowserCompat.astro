---
import type { BrowserName, Identifier } from '@mdn/browser-compat-data'

import CompatTable from './CompatTable'

type Props = {
  data: { data: Identifier; key: string } | null
}

const { data: bcd } = Astro.props

const desktopBrowsers: [BrowserName, string][] = [
  ['safari', 'Safari'],
  ['chrome', 'Chrome'],
  ['firefox', 'Firefox'],
]
const mobileBrowsers: [BrowserName, string][] = [
  ['safari_ios', 'Safari'],
  ['chrome_android', 'Chrome'],
  ['firefox_android', 'Firefox'],
  ['samsunginternet_android', 'Samsung\nInternet'],
]
---

{
  bcd ? <div><CompatTable className="bcd" client:idle {bcd} {desktopBrowsers} {mobileBrowsers} /></div> : null
}

<style>
  div {
    margin-top: 1em !important;
    overflow: auto hidden;
    padding-bottom: 0.5em;
    position: relative;
  }
</style>

<style define:vars={{ desktops: desktopBrowsers.length }} is:global lang="scss">
  .bcd.bcd {
    border-collapse: collapse;
    caption-side: bottom;
    font-size: 0.75em;

    th,
    td {
      border: 1px solid var(--primary);
      position: relative;

      &::before,
      &::after {
        content: '';
        mix-blend-mode: multiply;
        inset: 0;
        pointer-events: none;
        position: absolute;
      }
    }
    
    .sep {
      border-right: 3px double var(--primary);
    }

    // browsers
    thead th {
      font: 1em var(--display);
      padding: 0.5em 0.25em;
      vertical-align: bottom;
    }

    // feature names
    tbody th {
      width: 200px;
      padding: 0.5em 1em;
      text-align: left;
    }

    td {
      font-family: var(--display);
      vertical-align: top;
    }
  }
</style>
