---
import Starry from 'components/Starry.tsx'
import imgAlatta from './alatta.svg'

interface Props {
  links: readonly [group: string, readonly [label: string, href: string][]][]
}

const { links } = Astro.props
---

<div class="root">
  <div class="logo">
    <a href="/">
      <img alt="ALATTA" src={imgAlatta.src} />
    </a>
    <Starry client:load />
  </div>
  <div class="links">
    <dl>
      {
        links.map(([group, items]) => (
          <>
            <dt>{group}</dt>
            {items.map(([label, href]) => {
              const external = !href.startsWith('/')

              return (
                <dd>
                  <a href={href} {...(external ? { rel: 'noreferrer', target: '_blank' } : {})}>
                    {label}
                  </a>
                </dd>
              )
            })}
          </>
        ))
      }
    </dl>
    <hr />
    <a class="top" href="#">맨 위로 이동 ↑</a>
  </div>
</div>

<style>
  .root {
    display: flex;
    flex-direction: column;
    height: 100%;
  }

  .logo {
    align-items: center;
    height: var(--tb-row-height);
    background: var(--primary);
    border-bottom: 1px solid currentColor;
    display: flex;
    flex-shrink: 0;
    justify-content: center;
    position: relative;
  }

  img {
    height: 3rem;
    display: block;
  }

  .links {
    grid-row: body / span 2;
    overflow: auto;
    padding: 1.5rem 2rem;
  }

  dl {
    display: flex;
    flex-direction: column;

    font-family: var(--display);
    margin: 0;
  }
  dt {
    font-weight: 400;
  }
  dd {
    margin: 0;
  }

  dl > * + * {
    margin-top: 0.5rem;
  }
  dl a {
    display: inline-block;
    padding: 0 1rem;
    text-transform: lowercase;
  }

  hr {
    border: 0;
    border-top: 1px solid #000;
    margin: 1.5rem 0;
  }

  .top {
    display: inline-block;
    font-family: var(--display);
    padding: 0 1rem;
  }
</style>
