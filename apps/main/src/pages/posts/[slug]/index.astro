---
import type { GetStaticPaths } from 'astro'
import { getCollection, render } from 'astro:content'
import Article from 'components/Article.astro'
import ContentGrid from 'components/ContentGrid'
import Footer from 'components/Footer.astro'
import MainNav from 'components/MainNav.astro'
import TableOfContents from 'components/TableOfContents.astro'
import Shell from 'layouts/Shell.astro'

export const getStaticPaths = (async () => {
  return (await getCollection('posts')).map((entry) => ({
    params: { slug: entry.id },
    props: entry,
  }))
}) satisfies GetStaticPaths

const props = Astro.props
const site = Astro.site?.toString() ?? ''

const {
  Content,
  headings,
  remarkPluginFrontmatter: { lastModified },
} = await render(props)

const posts = [...(await getCollection('posts'))].reverse()
---

<Shell
  canonicalPath={`${props.id}`}
  description={props.data.description}
  image={`${site}posts/${props.id}/og.png`}
  title={props.data.title}
>
  <Fragment slot="head">
    <meta content="article" property="og:type" />
    <meta content="alattalatta" property="article:author" />
    <meta content={lastModified} property="article:modified_time" />
    <meta content={props.id.split('--')[0]} property="article:published_time" />
  </Fragment>
  <ContentGrid client:load>
    <MainNav
      links={[
        ['library', [['k-popo', 'https://www.npmjs.com/package/k-popo']]],
        ['experiments', [['dialog98', 'https://dialog98.sorto.me/']]],
        [
          'blog',
          [
            ...posts.map<[string, string]>((post) => [post.data.titleShort || post.data.title, `/posts/${post.id}`]),
            ['(...more)', '/posts'],
          ],
        ],
        [
          'docs',
          [
            ['HTML', '/docs/Web/HTML'],
            ['CSS', '/docs/Web/CSS'],
          ],
        ],
        [
          'contact',
          [
            ['github', 'https://github.com/alattalatta'],
            ['@sorto.me', 'mailto:alattalatta@sorto.me'],
          ],
        ],
      ]}
      slot="header"
    >
      <TableOfContents {headings} slot="toc" />
    </MainNav>
    <main>
      <Article content={Content} post={props} />
    </main>
    <Footer {lastModified} slot="footer" />
  </ContentGrid>
</Shell>
